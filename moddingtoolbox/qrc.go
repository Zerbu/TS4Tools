package main

// This file is automatically generated by gopkg.in/qml.v1/cmd/genqrc

import (
	"io/ioutil"
	"os"
	"path/filepath"

	"gopkg.in/qml.v1"
)

func init() {
	var r *qml.Resources
	var err error
	if os.Getenv("QRC_REPACK") == "1" {
		err = qrcRepackResources()
		if err != nil {
			panic("cannot repack qrc resources: " + err.Error())
		}
		r, err = qml.ParseResources(qrcResourcesRepacked)
	} else {
		r, err = qml.ParseResourcesString(qrcResourcesData)
	}
	if err != nil {
		panic("cannot parse bundled resources data: " + err.Error())
	}
	qml.LoadResources(r)
}

func qrcRepackResources() error {
	subdirs := []string{"qml"}
	var rp qml.ResourcesPacker
	for _, subdir := range subdirs {
		err := filepath.Walk(subdir, func(path string, info os.FileInfo, err error) error {
			if err != nil {
				return err
			}
			if info.IsDir() {
				return nil
			}
			data, err := ioutil.ReadFile(path)
			if err != nil {
				return err
			}
			rp.Add(filepath.ToSlash(path), data)
			return nil
		})
		if err != nil {
			return err
		}
	}
	qrcResourcesRepacked = rp.Pack().Bytes()
	return nil
}

var qrcResourcesRepacked []byte
var qrcResourcesData = "qres\x00\x00\x00\x01\x00\x00\n\xf1\x00\x00\x00\x14\x00\x00\n\x8f\x00\x00\x01)import QtQuick 2.4\nimport QtQuick.Controls 1.3\n\nApplicationWindow {\n\ttitle: \"Modding Toolbox\"\n\twidth: 340\n\theight: 240\n\n\tTabView {\n\t\tanchors.fill: parent\n\n\t\tTab {\n\t\t\ttitle: \"Hash\"\n\t\t\tanchors.margins: 6\n\n\t\t\tHasher {}\n\t\t}\n\n\t\tTab {\n\t\t\ttitle: \"Convert\"\n\t\t\tanchors.margins: 6\n\n\t\t\tConverter {}\n\t\t}\n\t}\n}\n\x00\x00\x02\x16import QtQuick 2.4\nimport QtQuick.Controls 1.3\n\nItem {\n\tColumn {\n\t\tspacing: 4\n\n\t\tLabel { text: \"Enter number to convert to hexadecimal or decimal: \" }\n\n\t\tTextField {\n\t\t\twidth: parent.width\n\t\t\tonTextChanged: {\n\t\t\t\tconvert.changeText(text)\n\t\t\t}\n\t\t}\n\n\t\tLabel { text: \"Result:\" }\n\n\t\tTextField {\n\t\t\ttext: convert.result\n\t\t\twidth: parent.width\n\t\t\treadOnly: true\n\t\t\tonTextChanged: {\n\t\t\t\tif (convert.alignRight) {\n\t\t\t\t\thorizontalAlignment = TextInput.AlignRight\n\t\t\t\t} else {\n\t\t\t\t\thorizontalAlignment = TextInput.AlignLeft\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\x00\x00\a0import QtQuick 2.4\nimport QtQuick.Controls 1.3\n\nItem {\n\tColumn {\n\t\tspacing: 4\n\n\t\tLabel { text: \"Type string to hash:\" }\n\n\t\tTextField {\n\t\t\twidth: parent.width\n\t\t\tonTextChanged: {\n\t\t\t\thash.changeText(text)\n\t\t\t}\n\t\t}\n\n\t\tRow {\n\t\t\tspacing: 4\n\n\t\t\tLabel {\n\t\t\t\tid: formatLabel\n\t\t\t\ttext: \"Display result as\"\n\t\t\t}\n\n\t\t\tExclusiveGroup { id: numberFormat }\n\n\t\t\tRadioButton {\n\t\t\t\ttext: \"Hexadecimal\"\n\t\t\t\tchecked: true\n\t\t\t\texclusiveGroup: numberFormat\n\t\t\t\tanchors.baseline: formatLabel.baseline\n\t\t\t\tonCheckedChanged: {\n\t\t\t\t\tif (checked) {\n\t\t\t\t\t\thash.changeFormat(\"hex\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tRadioButton {\n\t\t\t\ttext: \"Decimal\"\n\t\t\t\texclusiveGroup: numberFormat\n\t\t\t\tanchors.baseline: formatLabel.baseline\n\t\t\t\tonCheckedChanged: {\n\t\t\t\t\tif (checked) {\n\t\t\t\t\t\thash.changeFormat(\"dec\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tGrid {\n\t\t\tcolumns: 2\n\t\t\tspacing: 4\n\n\t\t\tColumn {\n\t\t\t\tspacing: 4\n\n\t\t\t\tLabel { text: \"FNV 24\" }\n\n\t\t\t\tTextField {\n\t\t\t\t\ttext: hash.fnv24\n\t\t\t\t\twidth: 160\n\t\t\t\t\treadOnly: true\n\t\t\t\t\thorizontalAlignment: TextInput.AlignRight\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tItem { width: 1; height: 1 }\n\n\t\t\tColumn {\n\t\t\t\tspacing: 4\n\n\t\t\t\tLabel { text: \"FNV 32\" }\n\n\t\t\t\tTextField {\n\t\t\t\t\ttext: hash.fnv32\n\t\t\t\t\twidth: 160\n\t\t\t\t\treadOnly: true\n\t\t\t\t\thorizontalAlignment: TextInput.AlignRight\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tColumn {\n\t\t\t\tspacing: 4\n\n\t\t\t\tLabel { text: \"FNV 32 High Bit\" }\n\n\t\t\t\tTextField {\n\t\t\t\t\ttext: hash.fnv32\n\t\t\t\t\twidth: 160\n\t\t\t\t\treadOnly: true\n\t\t\t\t\thorizontalAlignment: TextInput.AlignRight\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tColumn {\n\t\t\t\tspacing: 4\n\n\t\t\t\tLabel { text: \"FNV 64\" }\n\n\t\t\t\tTextField {\n\t\t\t\t\ttext: hash.fnv64\n\t\t\t\t\twidth: 160\n\t\t\t\t\treadOnly: true\n\t\t\t\t\thorizontalAlignment: TextInput.AlignRight\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tColumn {\n\t\t\t\tspacing: 4\n\n\t\t\t\tLabel { text: \"FNV 64 High Bit\" }\n\n\t\t\t\tTextField {\n\t\t\t\t\ttext: hash.fnv64High\n\t\t\t\t\twidth: 160\n\t\t\t\t\treadOnly: true\n\t\t\t\t\thorizontalAlignment: TextInput.AlignRight\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\x00\x03\x00\x00x<\x00q\x00m\x00l\x00\v\tݜ|\x00T\x00o\x00o\x00l\x00b\x00o\x00x\x00.\x00q\x00m\x00l\x00\r\x0e\x0e\xd0<\x00C\x00o\x00n\x00v\x00e\x00r\x00t\x00e\x00r\x00.\x00q\x00m\x00l\x00\n\x0ẻ\x1c\x00H\x00a\x00s\x00h\x00e\x00r\x00.\x00q\x00m\x00l\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\f\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x01\x00\x00\x01-\x00\x00\x00H\x00\x00\x00\x00\x00\x01\x00\x00\x03G"
